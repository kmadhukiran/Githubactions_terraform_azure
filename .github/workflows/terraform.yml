name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: "Terraform Plan"
      uses: hashicorp/terraform-github-actions@master
      with: tf_actions_version:"0.12.13"
      tf_actions_subcommand: "plan"
      tf_actions_working_dir: "./terraform"
      tf_actions_comment: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_agent_client_id: ${{ secrets.TF_VAR_agent_client_id }}
      TF_VAR_agent_client_secret: ${{secrets.TF_VAR_agent_client_secret }}
      TF_VAR_subscription_id: ${{ secrets.TF_VAR_subscription_id }}
      TF_VAR_tenant_id: ${{ secrets.TF_VAR_tenant_id }}
    
      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
     - name: Terraform Apply
      uses: hashicorp/terraform-github-actions@master
      with: tf_actions_version:"0.12.13"
      tf_actions_subcommand: "plan"
      tf_actions_working_dir: "./terraform"
      tf_actions_comment: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_agent_client_id: ${{ secrets.TF_VAR_agent_client_id }}
      TF_VAR_agent_client_secret: ${{secrets.TF_VAR_agent_client_secret }}
      TF_VAR_subscription_id: ${{ secrets.TF_VAR_subscription_id }}
      TF_VAR_tenant_id: ${{ secrets.TF_VAR_tenant_id }}
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
